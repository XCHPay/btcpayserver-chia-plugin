@using BTCPayServer
@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Data
@using BTCPayServer.Payments
@using BTCPayServer.Plugins.Chia.Configuration
@using BTCPayServer.Plugins.Chia.Controllers
@using BTCPayServer.Plugins.Chia.Services
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager;
@inject ChiaPluginConfiguration ChiaPluginConfiguration;
@inject IScopeProvider ScopeProvider
@inject UIChiaLikeStoreController UiChiaLikeStore;
@inject ChiaRpcProvider ChiaRpcProvider;
@{
    var storeId = ScopeProvider.GetCurrentStoreId();
}
@if (SignInManager.IsSignedIn(User) && ChiaPluginConfiguration.ChiaConfigurationItems.Any())
{
    var store = Context.GetStoreData();
    var result = UiChiaLikeStore.GetVM(store);

    foreach (var item in result.Items)
    {
        var isAvailable = ChiaRpcProvider.IsAvailable(item.PaymentMethodId);
        var isActive = !string.IsNullOrEmpty(storeId) && ViewContext.RouteData.Values.TryGetValue("Controller", out var controller) && controller is not null &&
                       nameof(UIChiaLikeStoreController).StartsWith(controller.ToString() ?? string.Empty, StringComparison.InvariantCultureIgnoreCase) &&
                       ViewContext.RouteData.Values.TryGetValue("paymentMethodId", out var paymentMethodId) && paymentMethodId is not null && new PaymentMethodId((string)paymentMethodId) == item.PaymentMethodId;
        <li class="nav-item">
            <a class="nav-link @(isActive ? "active" : "")"
               asp-route-paymentMethodId="@item.PaymentMethodId"
               asp-route-storeId="@storeId"
               asp-action="GetStoreChiaLikePaymentMethod"
               asp-controller="UIChiaLikeStore">
                <span class="me-2 btcpay-status btcpay-status--@(item.Enabled ? isAvailable ? "enabled" : "disabled" : "pending")"></span>
                <span>@item.DisplayName</span>
            </a>
        </li>
    }
}